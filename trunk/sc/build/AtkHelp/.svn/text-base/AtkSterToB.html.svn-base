<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<title></title>
<meta name="Generator" content="Cocoa HTML Writer">
<meta name="CocoaVersion" content="1038.25">
<style type="text/css">
p.p1 {margin: 0.0px 0.0px 0.0px 0.0px; font: 14.0px Helvetica}
p.p2 {margin: 0.0px 0.0px 0.0px 0.0px; font: 18.0px Helvetica; min-height: 22.0px}
p.p3 {margin: 0.0px 0.0px 0.0px 0.0px; font: 12.0px Helvetica}
p.p4 {margin: 0.0px 0.0px 0.0px 0.0px; font: 12.0px Helvetica; min-height: 14.0px}
p.p5 {margin: 0.0px 0.0px 0.0px 0.0px; font: 9.0px Monaco}
span.s1 {font: 18.0px Helvetica}
span.s2 {color: #2500cf}
span.Apple-tab-span {white-space:pre}
</style>
</head>
<body>
<p class="p1"><span class="s1"><b>AtkSterToB<span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span></b></span><b>Ambisonic Tool Kit B-format stereo sound encoder</b></p>
<p class="p2"><b></b><br></p>
<p class="p3"><b>AtkSterToB.kr(inl, inr, azimuth, width, elevation)</b></p>
<p class="p4"><br></p>
<p class="p3">Encode a stereo signal onto a first order Ambisonic unit-sphere</p>
<p class="p4"><br></p>
<p class="p3"><b>inl - </b>the left channel of an audio signal to encode</p>
<p class="p3"><b>inr - </b>the right channel of an audio signal to encode</p>
<p class="p3"><b>azimuth</b> - the angle (in radians) of the angle of sound placement. 0 is front, 0.5pi is left, pi is rear, 1.5pi is right.<span class="Apple-converted-space"> </span></p>
<p class="p3"><b>width -<span class="Apple-converted-space"> </span></b> the width of the stereo image (in radians) (defaults to 0.5pi)</p>
<p class="p3"><b>elevation</b> - the angle (in radians) of the elevation of sound placement. 0 is middle, 0.5pi is up, -0.5pi is down.</p>
<p class="p4"><br></p>
<p class="p5">{<span class="Apple-converted-space"> </span></p>
<p class="p5">#w, x, y, z = <span class="s2">AtkSterToB</span>.ar(</p>
<p class="p5"><span class="Apple-tab-span">	</span><span class="s2">PinkNoise</span>.ar * <span class="s2">LFSaw</span>.kr(-10).range(0, 0.2),<span class="Apple-converted-space"> </span></p>
<p class="p5"><span class="Apple-tab-span">	</span><span class="s2">SinOsc</span>.ar * <span class="s2">LFSaw</span>.kr(-10).range(0, 0.1),<span class="Apple-converted-space"> </span></p>
<p class="p5"><span class="Apple-tab-span">	</span><span class="s2">MouseX</span>.kr(0, 2pi));</p>
<p class="p5"><span class="s2">AtkPantoF</span>.ar(4, w, x, y, 1, -1);</p>
<p class="p5">}.play(s);</p>
</body>
</html>
